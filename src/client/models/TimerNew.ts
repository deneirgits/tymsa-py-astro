/* tslint:disable */
/* eslint-disable */
/**
 * Tymsa API
 * API for Tymsa time-tracking
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimerNew
 */
export interface TimerNew {
    /**
     * 
     * @type {number}
     * @memberof TimerNew
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof TimerNew
     */
    readonly startDatetime: Date;
    /**
     * 
     * @type {Date}
     * @memberof TimerNew
     */
    readonly endDatetime: Date | null;
    /**
     * 
     * @type {string}
     * @memberof TimerNew
     */
    readonly note: string;
    /**
     * 
     * @type {string}
     * @memberof TimerNew
     */
    readonly duration: string | null;
    /**
     * 
     * @type {number}
     * @memberof TimerNew
     */
    readonly project: number | null;
}

/**
 * Check if a given object implements the TimerNew interface.
 */
export function instanceOfTimerNew(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "startDatetime" in value;
    isInstance = isInstance && "endDatetime" in value;
    isInstance = isInstance && "note" in value;
    isInstance = isInstance && "duration" in value;
    isInstance = isInstance && "project" in value;

    return isInstance;
}

export function TimerNewFromJSON(json: any): TimerNew {
    return TimerNewFromJSONTyped(json, false);
}

export function TimerNewFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimerNew {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'startDatetime': (new Date(json['start_datetime'])),
        'endDatetime': (json['end_datetime'] === null ? null : new Date(json['end_datetime'])),
        'note': json['note'],
        'duration': json['duration'],
        'project': json['project'],
    };
}

export function TimerNewToJSON(value?: TimerNew | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

